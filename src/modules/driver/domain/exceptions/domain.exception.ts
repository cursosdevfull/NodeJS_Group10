export enum DomainExceptionCode {
  DEFAULT_DOMAIN_EXCEPTION = "DEFAULT_DOMAIN_EXCEPTION",
  DRIVER_NAME_REQUIRED = "DRIVER_NAME_REQUIRED",
  DRIVER_LASTNAME_REQUIRED = "DRIVER_LASTNAME_REQUIRED",
  DRIVER_EMAIL_REQUIRED = "DRIVER_EMAIL_REQUIRED",
  DRIVER_EMAIL_INVALID = "DRIVER_EMAIL_INVALID",
  DRIVER_PASSWORD_REQUIRED = "DRIVER_PASSWORD_REQUIRED",
  DRIVER_PASSWORD_LENGTH_INVALID = "DRIVER_PASSWORD_LENGTH_INVALID",
  DRIVER_GUID_INVALID = "DRIVER_GUID_INVALID",
  DRIVER_NOT_FOUND = "DRIVER_NOT_FOUND",
}

export abstract class DomainException extends Error {
  constructor(message?: string) {
    super(message);
    Object.setPrototypeOf(this, DomainException.prototype);
    this.name = DomainExceptionCode.DEFAULT_DOMAIN_EXCEPTION;
  }
}
